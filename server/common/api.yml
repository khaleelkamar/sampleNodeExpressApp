openapi: 3.0.1
info:
  title: myapp-Khaleel -NodeJS Assignment API
  description: NODEJS-POSTGRESS-CRUD
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: User
    description: User Crud Operations
  - name: contacts
    description: contacts Crud Operations 
paths:
  /createUser:
    post:
      tags:
        - User
      description: Create a new user
      requestBody:
        description: an example
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
        required: true
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /userLogin:
    post:
      tags:
        - User
      description: user login
      requestBody:
        description: an example
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userLogin"
        required: true
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /contacts:
    post:
      tags:
        - contacts
      description: Create a new Contact
      parameters:
        - in: header
          name: x-access-token
          required: true
          schema:
            type: string
      requestBody:
        description: an example
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createContact"
        required: true
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - contacts
      description: Create a new Contact
      parameters:
        - in: header
          name: x-access-token
          required: true
          schema:
            type: string
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"   

  /contacts/{id}:
    get:
      tags:
        - contacts
      description: get contacts
      parameters:
        - name: id
          in: path
          description: The id of the conatct to retrieve
          required: true
          schema:
            type: integer
        - in: header
          name: x-access-token
          required: true
          schema:
            type: string
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Data not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - contacts
      description: get contacts
      parameters:
        - name: id
          in: path
          description: The id of the conatct to update the data
          required: true
          schema:
            type: integer
        - in: header
          name: x-access-token
          required: true
          schema:
            type: string
      requestBody:
        description: an example
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createContact"
        required: true
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Data not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - contacts
      description: get contacts
      parameters:
        - name: id
          in: path
          description: The id of the conatct to update the data
          required: true
          schema:
            type: integer
        - in: header
          name: x-access-token
          required: true
          schema:
            type: string
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Data not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Example:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: example 3
    Error:
      type: object
      additionalProperties: true
    createUser:
      title: createUser
      required:
        - userName
        - userPassword
      type: object
      properties:
        userName:
          type: string
          example: "userName"
        userPassword:
          type: string
          example: "userName"
    createContact:
      title: createContact
      type: object
      properties:
        firstName:
          type: string
          example: "userName"
        lastName:
          type: string
          example: "test@gmail.com"
        email:
          type: string
          example: "test@gmail.com"
        phone:
          type: string
          example: "userAddress"
        address:
          type: string
        city:
          type: string
          example: "test@gmail.com"
        state:
          type: string
          example: "kerala"
        country:
          type: string
          example: "userAddress"
        zipCode:
          type: string
    userLogin:
      title: createCompany
      required:
        - userName
        - userPassword
      type: object
      properties:
        userName:
          type: string
          example: "userName"
        userPassword:
          type: string
          example: "Password@98"
